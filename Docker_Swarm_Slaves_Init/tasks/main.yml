---                         
# tasks file for DockerSwarm leader server Init
- name: Register "docker_info". and Check if "Swarm Mode" is enabled.
  shell: docker info
  changed_when: False
  register: docker_info
  tags:
    - skip_ansible_lint # Suppressing the linter

- name: Set swarm state facts
  set_fact:
    docker_swarm_addr: "{{ groups['all'][0] }}"
    docker_manager_address: "{{ docker_swarm_addr }}:{{ docker_swarm_port }}"
  when: "inventory_hostname == groups['leader'][0]"

      #- name: Get swarm state
      #  command: >-
      #    docker info -f {% raw %}'{{ .Swarm.LocalNodeState }}'{% endraw %}
      #  changed_when: false
      #  register: docker_swarm_state

- name: Init "Swarm Mode" on the first manager.
  shell: docker swarm init
        --listen-addr {{ groups['all'][0] }}:{{ docker_swarm_port }}
        --advertise-addr {{ docker_swarm_addr }}
  when: "docker_info.stdout.find('Swarm: active') == -1
    and inventory_hostname == groups['leader'][0]"
  tags:
    - skip_ansible_lint
      # Suppressing the linter

- name: Get the worker join-token.
  shell: docker swarm join-token -q worker
  changed_when: False
  register: docker_worker_token
  delegate_to: "{{ groups['leader'][0] }}"
  delegate_facts: True
  when: "'leader' in group_names"
  tags:
    - skip_ansible_lint
      # Suppressing the linter

- name: Get the manager join-token.
  shell: docker swarm join-token -q manager
  changed_when: False
  register: docker_manager_token
  delegate_to: "{{ groups['leader'][0] }}"
  delegate_facts: True
  when: "'leader' in group_names
    and inventory_hostname == groups['leader'][0]"
  tags:
    - skip_ansible_lint 
      # Suppressing the linter

- name: cluster | Register primary node
  set_fact:
    docker_primary_node_addr: >-
      {{ hostvars[docker_swarm_primary_manager_name]['docker_swarm_addr'] }}
- name: cluster | Join Swarm as a worker
  command: >
    docker swarm join
    --advertise-addr {{ docker_swarm_addr }}
    --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }}
    --token {{ docker_swarm_worker_token.stdout }}
    {{ docker_primary_node_addr }}:{{ docker_swarm_port }}
  when:
    - not docker_node_active
    - not docker_node_pending
    - "'docker_swarm_worker' in group_names"

- name: cluster | Join Swarm as a manager
  command: >
    docker swarm join
    --advertise-addr {{ docker_swarm_addr }}
    --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }}
    --token {{ docker_swarm_manager_token.stdout }}
    {{ docker_primary_node_addr }}:{{ docker_swarm_port }}
  when:
    - not docker_node_active
    - not docker_node_pending
    - "'docker_swarm_manager' in group_names"
    - inventory_hostname != docker_swarm_primary_manager_name
